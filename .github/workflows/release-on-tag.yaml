name: Release

on:
  push:
    tags:
      - 'v*' # v0.4.4

jobs:

  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

    - name: Setup
      id: go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Checkout
      id: setup
      uses: actions/checkout@v2

    - name: Tidy
      run: |
        go mod tidy 
        go mod vendor

    - name: Test
      run: go test -v -count=1 -race ./...

    - name: Version
      id: get_version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      
    - name: Build
      run: |
        env CGO_ENABLED=0 GOOS=darwin  GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.RELEASE_VERSION }}" -mod vendor -o ./dist/mac/eventmaker ./cmd
        env CGO_ENABLED=0 GOOS=linux   GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.RELEASE_VERSION }}" -mod vendor -o ./dist/linux/eventmaker ./cmd
        env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.RELEASE_VERSION }}" -mod vendor -o ./dist/windows/eventmaker.exe ./cmd
    
    - name: Archive
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r eventmaker.zip ./dist/mac ./dist/linux ./dist/windows

    - name: Release
      id: release-step
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Automatic release 
        draft: false
        prerelease: false

    - name: Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release-step.outputs.upload_url }}
        asset_path: ./eventmaker.zip
        asset_name: eventmaker.zip
        asset_content_type: application/zip

    - name: Image
      uses: elgohr/Publish-Docker-Github-Action@v5
      env:
        VERSION: ${{ env.RELEASE_VERSION }}
      with:
        name: mchmarny/eventmaker
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: VERSION
        tags: "latest,${{ env.RELEASE_VERSION }}"
